import{s as Bt,n as it}from"../chunks/scheduler.BRW4IjsR.js";import{S as At,i as St,s as a,e as n,k as kt,d as l,f as s,c as o,l as u,m as at,g as i}from"../chunks/index.yRNBcVz4.js";function Wt(qt){let k,r,nt="Beginner",W,f,st='<a href="https://complogic.cs.mcgill.ca/tutorial.pdf">Beginner&#39;s Guide to Programming in Beluga</a>',z,h,ot=`This guide is mostly for users who have only a background in functional programming as often
	taught in an undergraduate class. We show how to write some common simple functional programs in
	Beluga and also briefly discuss how to write simple proofs in Beluga.Here are a few sample
	programs discussed in the tutorial to get you started`,E,x,ut='<li><a href="tutorial/nat">nat.bel:</a> naturals (Section 2);</li> <li><a href="tutorial/yn">yn.bel</a> yes and no (Section 2);</li> <li><a href="tutorial/listnat">listnat.bel:</a> Lists of naturals (Section 2);</li> <li><a href="tutorial/dtlist">dtlist.bel:</a> length indexed lists (Section 3);</li> <li><a href="tutorial/typesterms2">typesterms2.bel:</a> list filtering (Section 3);</li> <li><a href="tutorial/typesterms3">typesterms3.bel:</a> list filtering (Section 3);</li> <li><a href="tutorial/typesterms">typesterms.bel:</a> evaluation is deterministic (Section 4);</li> <li><a href="tutorial/lambda">lambda.bel:</a> lambda-calculus and proof of preservation (Section 5).</li>',I,d,rt='<a href="examples/literate_beluga/0Beginner/Close_Terms">Close Terms</a>',U,v,mt=`We build a simple program that closes open terms, converting each free variable to one bound by a
	lambda abstraction. The example demonstrates pattern matching on contexts and Beluga's built-in
	mechanism for variable substitution.`,R,c,pt='<a href="examples/literate_beluga/0Beginner/Type_Uniqueness">Type Uniqueness</a>',N,y,ft=`Since Beluga does not support equality types, we implement equality using an LF type family as a
	dependent kind. The difficulties of defining equality via reflexivity in Twelf do not arise in
	Beluga. Beluga's proof is implemented as a function using pattern matching instead of relations;
	as we pattern match we learn more about the given derivations and information flows as expected.`,j,m,ht="Intermediate",F,_,xt='<a href="examples/literate_beluga/1Intermediate/Parallel_Reduction">Parallel Reduction</a>',G,C,dt=`The order of assumptions in a context is important in Beluga. However, sometimes the need to
	reorder assumptions arises, as is illustrated in the proof of the substitution lemma for
	algorithmic equality. As in Twelf this kind of proof does not come for free in Beluga.`,K,b,vt='<a href="examples/literate_beluga/1Intermediate/Polymorphic_Algorithmic_Equality">Polymorphic Algorithmic Equality</a>',O,H,ct=`In order to prove algorithmic equality for a polymorphic lambda-calculus, we establish schemas
	with alternating assumptions, depending on the type of the variable.`,D,T,yt='<a href="examples/literate_beluga/1Intermediate/Poplmark">Poplmark</a>',J,w,_t='This example shows a solution of the <a href="http://www.seas.upenn.edu/~plclub/poplmark/">POPLMARK Challenge</a> Part 1A, Transitivity of Subtyping.',Q,L,Ct='<a href="examples/literate_beluga/1Intermediate/Untyped_Algorithmic_Equality_-_Context_Relation">Untyped Algorithmic Equality - Context Relation</a>',V,g,bt=`Context relationships can be defined explicitly using inductive datatypes. In this proof we use
	inductive datatypes to establish strengthening and weakening between contexts.`,X,M,Ht='<a href="examples/literate_beluga/1Intermediate/Untyped_Algorithmic_Equality_-_Context_Subsumption">Untyped Algorithmic Equality - Context Subsumption</a>',Y,P,Tt=`This example demonstrates Beluga's capacity for automatic context subsumption. If schema W is a
	prefix of a schema W0, then we can always use a context of schema W0 in place of a context of
	schema W. Essentially, we allow the user to pass a context of schema W0 where a context with
	schema W if W0 contains at least as much information as W.`,Z,p,wt="Advanced",$,q,Lt='<a href="examples/literate_beluga/2Advanced/Normalization_by_Evaluation">Normalization by Evaluation</a>',tt,B,gt="A normalization by evaluation algorithm for an intrinsically typed simply-typed lambda calculus.",et,A,Mt='<a href="examples/literate_beluga/2Advanced/Weak_Normalization">Weak Normalization</a>',lt,S,Pt="A proof of weak head normalization for the simply typed lambda calculus using logical relations.";return{c(){k=a(),r=n("h2"),r.textContent=nt,W=a(),f=n("h4"),f.innerHTML=st,z=a(),h=n("p"),h.textContent=ot,E=a(),x=n("ul"),x.innerHTML=ut,I=a(),d=n("h4"),d.innerHTML=rt,U=a(),v=n("p"),v.textContent=mt,R=a(),c=n("h4"),c.innerHTML=pt,N=a(),y=n("p"),y.textContent=ft,j=a(),m=n("h2"),m.textContent=ht,F=a(),_=n("h4"),_.innerHTML=xt,G=a(),C=n("p"),C.textContent=dt,K=a(),b=n("h4"),b.innerHTML=vt,O=a(),H=n("p"),H.textContent=ct,D=a(),T=n("h4"),T.innerHTML=yt,J=a(),w=n("p"),w.innerHTML=_t,Q=a(),L=n("h4"),L.innerHTML=Ct,V=a(),g=n("p"),g.textContent=bt,X=a(),M=n("h4"),M.innerHTML=Ht,Y=a(),P=n("p"),P.textContent=Tt,Z=a(),p=n("h2"),p.textContent=wt,$=a(),q=n("h4"),q.innerHTML=Lt,tt=a(),B=n("p"),B.textContent=gt,et=a(),A=n("h4"),A.innerHTML=Mt,lt=a(),S=n("p"),S.textContent=Pt,this.h()},l(t){kt("svelte-ar64mp",document.head).forEach(l),k=s(t),r=o(t,"H2",{id:!0,"data-svelte-h":!0}),u(r)!=="svelte-1y68t2i"&&(r.textContent=nt),W=s(t),f=o(t,"H4",{"data-svelte-h":!0}),u(f)!=="svelte-1oumpov"&&(f.innerHTML=st),z=s(t),h=o(t,"P",{"data-svelte-h":!0}),u(h)!=="svelte-k2tfcv"&&(h.textContent=ot),E=s(t),x=o(t,"UL",{"data-svelte-h":!0}),u(x)!=="svelte-188jhut"&&(x.innerHTML=ut),I=s(t),d=o(t,"H4",{"data-svelte-h":!0}),u(d)!=="svelte-1piou6n"&&(d.innerHTML=rt),U=s(t),v=o(t,"P",{"data-svelte-h":!0}),u(v)!=="svelte-1cyapkf"&&(v.textContent=mt),R=s(t),c=o(t,"H4",{"data-svelte-h":!0}),u(c)!=="svelte-187vdxw"&&(c.innerHTML=pt),N=s(t),y=o(t,"P",{"data-svelte-h":!0}),u(y)!=="svelte-10ioqv6"&&(y.textContent=ft),j=s(t),m=o(t,"H2",{id:!0,"data-svelte-h":!0}),u(m)!=="svelte-f648an"&&(m.textContent=ht),F=s(t),_=o(t,"H4",{"data-svelte-h":!0}),u(_)!=="svelte-18c0nps"&&(_.innerHTML=xt),G=s(t),C=o(t,"P",{"data-svelte-h":!0}),u(C)!=="svelte-jiaqr3"&&(C.textContent=dt),K=s(t),b=o(t,"H4",{"data-svelte-h":!0}),u(b)!=="svelte-14e87ts"&&(b.innerHTML=vt),O=s(t),H=o(t,"P",{"data-svelte-h":!0}),u(H)!=="svelte-e8l0oh"&&(H.textContent=ct),D=s(t),T=o(t,"H4",{"data-svelte-h":!0}),u(T)!=="svelte-1s2lff4"&&(T.innerHTML=yt),J=s(t),w=o(t,"P",{"data-svelte-h":!0}),u(w)!=="svelte-1yu6731"&&(w.innerHTML=_t),Q=s(t),L=o(t,"H4",{"data-svelte-h":!0}),u(L)!=="svelte-tz13hp"&&(L.innerHTML=Ct),V=s(t),g=o(t,"P",{"data-svelte-h":!0}),u(g)!=="svelte-1xxaq5z"&&(g.textContent=bt),X=s(t),M=o(t,"H4",{"data-svelte-h":!0}),u(M)!=="svelte-1mu6cmf"&&(M.innerHTML=Ht),Y=s(t),P=o(t,"P",{"data-svelte-h":!0}),u(P)!=="svelte-1xkig5m"&&(P.textContent=Tt),Z=s(t),p=o(t,"H2",{id:!0,"data-svelte-h":!0}),u(p)!=="svelte-y5a6e0"&&(p.textContent=wt),$=s(t),q=o(t,"H4",{"data-svelte-h":!0}),u(q)!=="svelte-15almxy"&&(q.innerHTML=Lt),tt=s(t),B=o(t,"P",{"data-svelte-h":!0}),u(B)!=="svelte-bnzop6"&&(B.textContent=gt),et=s(t),A=o(t,"H4",{"data-svelte-h":!0}),u(A)!=="svelte-hvzlry"&&(A.innerHTML=Mt),lt=s(t),S=o(t,"P",{"data-svelte-h":!0}),u(S)!=="svelte-1wx6vwh"&&(S.textContent=Pt),this.h()},h(){document.title="Beluga Case Studies",at(r,"id","0Beginner"),at(m,"id","1Intermediate"),at(p,"id","2Advanced")},m(t,e){i(t,k,e),i(t,r,e),i(t,W,e),i(t,f,e),i(t,z,e),i(t,h,e),i(t,E,e),i(t,x,e),i(t,I,e),i(t,d,e),i(t,U,e),i(t,v,e),i(t,R,e),i(t,c,e),i(t,N,e),i(t,y,e),i(t,j,e),i(t,m,e),i(t,F,e),i(t,_,e),i(t,G,e),i(t,C,e),i(t,K,e),i(t,b,e),i(t,O,e),i(t,H,e),i(t,D,e),i(t,T,e),i(t,J,e),i(t,w,e),i(t,Q,e),i(t,L,e),i(t,V,e),i(t,g,e),i(t,X,e),i(t,M,e),i(t,Y,e),i(t,P,e),i(t,Z,e),i(t,p,e),i(t,$,e),i(t,q,e),i(t,tt,e),i(t,B,e),i(t,et,e),i(t,A,e),i(t,lt,e),i(t,S,e)},p:it,i:it,o:it,d(t){t&&(l(k),l(r),l(W),l(f),l(z),l(h),l(E),l(x),l(I),l(d),l(U),l(v),l(R),l(c),l(N),l(y),l(j),l(m),l(F),l(_),l(G),l(C),l(K),l(b),l(O),l(H),l(D),l(T),l(J),l(w),l(Q),l(L),l(V),l(g),l(X),l(M),l(Y),l(P),l(Z),l(p),l($),l(q),l(tt),l(B),l(et),l(A),l(lt),l(S))}}}class It extends At{constructor(k){super(),St(this,k,null,Wt,Bt,{})}}export{It as component};
